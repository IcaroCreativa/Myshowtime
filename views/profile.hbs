<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="shortcut icon" type="image/x-icon" href="/logo.ico">
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
    <title>Myshowtime Profile</title>
</head>
<body id="" class="bg-gray-100">
    
    {{!-- <h1 class="text-white text-2xl">{{user}}</h1> --}}
{{!-----------------REGISTER----- --}}
<p id='id' class="hidden">{{user._id}}</p>
{{!-- <p id='uu' class="">{{favorites}}</p> --}}


  <div class="flex flex-col items-center justify-center  mx-auto ">
      <a href="/" class="flex mt-6 items-center mb-6 text-2xl font-semibold text-white dark:text-white">
          <img class="w-8 h-8 mr-2 " src="/logo.svg" alt="logo">
         <p class="text-blue-600">MyShowTime</p>     
      </a>
      <div class="w-full md:w-3/4 lg:w-1/2 xl:1/3 2xl:1/5  bg-white rounded-lg shadow mt-6">
          <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
              <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                  Account
              </h1>
              <form class="space-y-4 md:space-y-6" >
                   <div>
                      <label for="name" class="block mb-2 text-lg font-medium text-gray-900 dark:text-white">Your Name</label>
                      <input value="{{user.name}}" min="3" max="50" type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 md:text-lg sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@company.com" required="">
                  </div>
                  
                  <div>
                      <label for="email" class="block mb-2 text-lg font-medium text-gray-900 dark:text-white">Your email</label>
                      <input value="{{user.email}}" onblur="verify_email()" type="email" name="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 md:text-lg sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@company.com" required="">
                      <p id="error-message1" class="text-red-600 text-sm italic mb-2 mt-1 ml-1"></p>
                  </div>
                
                  <div>
                      <label for="favorites" class="block mb-2 text-lg font-medium text-gray-900">My favorites</label>
                    
                <div class=" overflow-x-auto relative shadow-md sm:rounded-lg">
    <table class="w-full  text-left text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="py-3 px-6 text-lg">
                    Band
                </th>
                <th scope="col" class="py-3 px-6 text-lg">
                    Events
                </th>
                <th scope="col" class="py-3 px-6 text-lg">
                    Category
                </th>
                <th scope="col" class="py-3 px-6 text-lg">
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            {{#each favorites}}
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                <th scope="row" class=" flex py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                    <a href="#" class="flex">
                        <img src="/concerts/rolling.jpg" alt="rolling" class="h-12 w-12">
                        <p class="mt-2 ml-2 mr-4">{{name}}</p> 
                    </a>
                </th>
                
                <td class="py-4 px-6 ">
                    {{#each dates}}
                       {{this}}
                    {{/each}}
                    
                    
                </td>
                <td class="py-4 px-6 ">
                    {{genre}}
                </td>
              
                <td class="py-4 px-6 text-lg text-center">
{{!--                    
                    <a href="/user/test/{{user._id}}/favorites/{{favorite._id}}" class="font-medium text-red-600  hover:underline">Delete</a> --}}
                   <button class="remove-favorite font-medium text-red-600  hover:underline" data-user-id="{{user._id}}" data-favorite-id="{{_id}}">Delete</button>
</form>

                
                
                </td>
            </tr>
            {{!-- <p id="{{_id}}">{{_id}}</p> --}}
            {{/each}}
        </tbody>
    </table>
</div>







                  
                  </div>
                  
                 <div class="grid justify-center">
                  <button onclick="verify_email()" class="w-48 text-white bg-blue-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-lg px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Save</button>
                  {{!-- <button type="submit" class="w-full text-white bg-red-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Delete Account</button> --}}
                  <p class="text-sm font-light text-gray-500 dark:text-gray-400 mt-2">
                 </div>
                      I want to delete my Account <button onclick='deleteAccount()' class="font-medium text-primary-600 text-red-600 hover:underline dark:text-primary-500">here</button>
                  </p>
                  
              </form>
          </div>
      </div>
  </div>
</div>
 





</body>
</html>




<script>

    // fonctions a appeler lors du chargement de la page
var current_email=''
window.onload = function() {
    current_email=email=document.getElementById('email').value
     id=document.getElementById('id').innerText;
     if(id=="false"){
        deleteAllCookies();
        localStorage.clear();
        alert('user not found');
        window.location.href = '/';
     }
};

function clear_error_message(){
    
    email=document.getElementById('email').value
    password=document.getElementById('password').value
    error_message=document.getElementById('error-message')
    if(error_message.innerText=='The passwords do not match!'){
    error_message.innerHTML='';
    password.innerHTML='';
    document.getElementById('confirm-password').value=''
     document.getElementById('password').value=''
      document.getElementById('password').style.backgroundColor = '#f8fafc';
      document.getElementById('confirm-password').style.backgroundColor = '#f8fafc';

    }else{}
}


  

  // Ajout d'un écouteur d'événement pour exécuter la fonction de vérification lorsque le formulaire est soumis
  {{!-- var form = document.querySelector("form");
  form.addEventListener("submit", verify_email); --}}

  document.querySelector('form').addEventListener('submit', function(event) {
  event.preventDefault();
});


 function verify_email(){

    console.log('email verify function')
    error_message1=document.getElementById('error-message1')
    input=document.getElementById('email')
    email=document.getElementById('email').value
    console.log(current_email)
    if(email!=current_email){
        console.log('email verify function dans le if')
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");

    var raw = JSON.stringify({
    "email": email
    });

    var requestOptions = {
    method: 'POST',
    headers: myHeaders,
    body: raw,
    redirect: 'follow'
    };

    fetch("http://localhost:3000/email_verify", requestOptions)
    .then(response => response.text())
    .then(result => {
        if (result=='true'){
        error_message1.innerText='Email exists!'
        input.style.backgroundColor = '#fde68a';
        }
        else{
            error_message1.innerText=''
            input.style.backgroundColor = '#f8fafc';
            update_user();
            alert('Your email has been updated!')
        }
        
        })
    .catch(error => console.log('error', error));
    }else{
        console.log('verify email in else');
        error_message1.innerText=''
        input.style.backgroundColor = '#f8fafc';
        update_user();
        alert('Changes saved!')
       
    }
 }



function update_user(){

    id=document.getElementById('id').innerText;

 
    name=document.getElementById('name').value
    email=document.getElementById('email').value
    {{!-- favorites=['63a2337ca51304ae8ef230e4','63a233dca51304ae8ef230e6'] --}}
    isadmin=false
   
    var myHeaders = new Headers();
    myHeaders.append("content-Type", "application/json");

    var raw = JSON.stringify({
    "name": name.trim(),
    "email": email.trim(),
    {{!-- "favorites":favorites --}}
    
    });

    var requestOptions = {
    method: 'PUT',
    headers: myHeaders,
    body: raw,
    redirect: 'follow'
    };

    fetch("http://localhost:3000/user/"+id, requestOptions)
    .then(response => response.text())
    .then(result => console.log(result))
    .catch(error => console.log('error', error));
    
    }

// delete favorite in favorites list of the user using user controller

document.addEventListener('click', async (event) => {
  if (event.target.classList.contains('remove-favorite')) {
    const userId=document.getElementById('id').innerText;
    const favoriteId = event.target.dataset.favoriteId;

    if (window.confirm('Are you sure you want to delete your favorite?')) {
        // the user clicked "OK"
        const response = await fetch(`http://localhost:3000/user/${userId}/favorites/${favoriteId}`, { method: 'DELETE' });
        console.log(response)
        if (response.ok) {
        // remove the favorite from the DOM
        event.target.parentNode.remove();
        window.location.reload(true);
        } else {
        // display an error message
        console.error(response.statusText);
        }
    } else {
    // the user clicked "Cancel"
    }  
    }
});

function deleteAccount(){
   
     if (window.confirm('Are you sure you want to delete your Account?')) {
    var requestOptions = {
    method: 'DELETE',
    redirect: 'follow'
    };
     id=document.getElementById('id').innerText;
    
    fetch("http://localhost:3000/user/"+id, requestOptions)
    .then(response => response.json())
    .then(result => {
        console.log(result)
        if (result.message=="User deleted successfully"){

             localStorage.clear();
             removeAllCookies();
             window.location.href = '/'; 

        }
    })
    .catch(error => console.log('error', error));
    }
    else{
        //aborted deleting account
    }
}
function removeAllCookies(){

    // Récupère tous les noms de cookies
var cookies = Cookies.get();


// Librerie importé CDN dans le head
// Pour chaque cookie, utilise la méthode remove() pour le supprimer
for (var cookie in cookies) {
  Cookies.remove(cookie);
}
}
















</script>


<style>
#bg_img{
    background-image: url("https://images.unsplash.com/photo-1533174072545-7a4b6ad7a6c3?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1740&q=80");
    background-size: cover;
    background-repeat: none;
    }
</style>